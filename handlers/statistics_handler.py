import os

from telebot import TeleBot, types

from charts.statistics_charts import generate_expense_charts
from charts.top_categories_charts import generate_top_categories_pie
from config import days_for_statistics
from database.expenses import get_top_categories_and_other_sum
from database.statistics import full_statistics
from database.user_data import find_user_id_by_telegram_id
from inline_keyboard.statistics import create_time_interval_markup
from messages import (error_user_not_found, select_statistics_interval,
                      statistics_error)
from time_interval import get_time_interval


def handle_statistics_button(message: types.Message, bot: TeleBot):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    –¥–ª—è –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.

    Args:
        message (types.Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏.
        bot (TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
    """
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
    # –ü—Ä–µ—Ñ–∏–∫—Å 'time_interval_' –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ callback_data
    time_interval_markup = create_time_interval_markup('time_interval_')
    bot.send_message(
        chat_id=message.chat.id,
        text=select_statistics_interval,
        reply_markup=time_interval_markup
    )


def handle_basic_expenses_button(message: types.Message, bot: TeleBot):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "üìâ –û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–∞—Ç—ã".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã).

    Args:
        message (types.Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏.
        bot (TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
    """
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
    # –ü—Ä–µ—Ñ–∏–∫—Å 'time_interval_for_basic_expenses_' –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ callback_data
    time_interval_markup = create_time_interval_markup('time_interval_for_basic_expenses_')
    bot.send_message(
        chat_id=message.chat.id,
        text=select_statistics_interval,
        reply_markup=time_interval_markup
    )


def handle_statistics_interval_callback(query: types.CallbackQuery, bot: TeleBot):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–π —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è (–æ–±—â–∞—è –∏–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–∞—Ç—ã),
    –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≥—Ä–∞—Ñ–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    Args:
        query (types.CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.
        bot (TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞.
    """
    bot.answer_callback_query(query.id) # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback_query, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏

    data_str = query.data

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±—ã–ª –∑–∞–ø—Ä–æ—à–µ–Ω, –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ callback_data
    if data_str.startswith('time_interval_for_basic_expenses_'):
        interval = data_str.replace('time_interval_for_basic_expenses_', '')
        is_basic = True # –≠—Ç–æ –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–∞—Ç—ã (–∫—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞)
    elif data_str.startswith('time_interval_'):
        interval = data_str.replace('time_interval_', '')
        is_basic = False # –≠—Ç–æ –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (—Å—Ç–æ–ª–±—á–∞—Ç—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã)
    else:
        # –ï—Å–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
        print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data –≤ handle_statistics_interval_callback: {data_str}")
        return

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∏ –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    dates = get_time_interval(days_for_statistics[interval])
    start_date, end_date = dates['start_date'], dates['end_date']

    # –ù–∞—Ö–æ–¥–∏–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db_user_id = find_user_id_by_telegram_id(telegram_id=query.from_user.id)
    if db_user_id is None:
        bot.send_message(chat_id=query.message.chat.id, text=error_user_not_found)
        return

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≥—Ä–æ–º–æ–∂–¥–∞—Ç—å —á–∞—Ç
    try:
        bot.delete_message(chat_id=query.message.chat.id, message_id=query.message.message_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ handle_statistics_interval_callback: {e}")

    if is_basic:
        # üî∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ "–û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–∞—Ç—ã" (–∫—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞)
        data = get_top_categories_and_other_sum(db_user_id, start_date, end_date)
        if not data or (not data['top_categories'] and data['other_sum'] == 0.0): # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
            bot.send_message(query.message.chat.id, statistics_error) # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, —Å–æ–æ–±—â–∞–µ–º
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –∏ –ø–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        chart_path = generate_top_categories_pie(data)
        if not chart_path or not os.path.exists(chart_path): # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
            bot.send_message(query.message.chat.id, statistics_error)
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≥—Ä–∞—Ñ–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        with open(chart_path, 'rb') as img:
            bot.send_photo(query.message.chat.id, img)
        os.remove(chart_path) # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≥—Ä–∞—Ñ–∏–∫–∞

    else:
        # üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É" (—Å—Ç–æ–ª–±—á–∞—Ç—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã)
        data = full_statistics(db_user_id, start_date, end_date)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö: –æ–±—â–∞—è —Å—É–º–º–∞ > 0 –∏–ª–∏ –µ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏
        if not data or (data['total_expenses'] == 0.0 and not data['expenses_by_category']):
            bot.send_message(query.message.chat.id, statistics_error)
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–æ–ª–±—á–∞—Ç—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º
        charts_paths = generate_expense_charts(data)

        if not charts_paths: # –ï—Å–ª–∏ –≥—Ä–∞—Ñ–∏–∫–∏ –Ω–µ –±—ã–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)
            bot.send_message(query.message.chat.id, statistics_error)
            return

        if len(charts_paths) == 1:
            # –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≥—Ä–∞—Ñ–∏–∫, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –∫–∞–∫ —Ñ–æ—Ç–æ
            with open(charts_paths[0], 'rb') as img:
                bot.send_photo(query.message.chat.id, img)
            os.remove(charts_paths[0]) # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        else:
            # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥—Ä–∞—Ñ–∏–∫–æ–≤, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö –≥—Ä—É–ø–ø–æ–π
            opened_images = [open(path, 'rb') for path in charts_paths]
            media = [types.InputMediaPhoto(img) for img in opened_images]
            bot.send_media_group(query.message.chat.id, media)
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã
            for img_file in opened_images:
                img_file.close()
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤
            for path in charts_paths:
                os.remove(path)
